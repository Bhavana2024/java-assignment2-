package grade;

	import java.util.Scanner;

	class ListNode {
	    int val;
	    ListNode next;

	    ListNode(int val) {
	        this.val = val;
	        this.next = null;
	    }
	}

	public class merge {

	    public static ListNode mergeLinkedLists(ListNode l1, ListNode l2) {
	        ListNode dummy = new ListNode(-1);
	        ListNode current = dummy;

	        while (l1 != null && l2 != null) {
	            if (l1.val < l2.val) {
	                current.next = l1;
	                l1 = l1.next;
	            } else {
	                current.next = l2;
	                l2 = l2.next;
	            }
	            current = current.next;
	        }

	        if (l1 != null) {
	            current.next = l1;
	        }

	        if (l2 != null) {
	            current.next = l2;
	        }

	        return dummy.next;
	    }

	    public static void printLinkedList(ListNode head) {
	        ListNode current = head;
	        while (current != null) {
	            System.out.print(current.val + "->");
	            current = current.next;
	        }
	        System.out.println("null");
	    }

	    public static void main(String[] args) {
	        Scanner scanner = new Scanner(System.in);

	        System.out.print("Enter the elements: ");
	        int n1 = scanner.nextInt();

	        System.out.println("Enter the elements:");
	        ListNode l1 = new ListNode(scanner.nextInt());
	        ListNode current1 = l1;
	        for (int i = 1; i < n1; i++) {
	            current1.next = new ListNode(scanner.nextInt());
	            current1 = current1.next;
	        }

	        System.out.print("Enter the number of elements : ");
	        int n2 = scanner.nextInt();

	        System.out.println("Enter the elements:");
	        ListNode l2 = new ListNode(scanner.nextInt());
	        ListNode current2 = l2;
	        for (int i = 1; i < n2; i++) {
	            current2.next = new ListNode(scanner.nextInt());
	            current2 = current2.next;
	        }

	        scanner.close();

	        System.out.println("Linked-List-1: ");
	        printLinkedList(l1);

	        System.out.println("Linked-List-2: ");
	        printLinkedList(l2);

	        ListNode mergedList = mergeLinkedLists(l1, l2);

	        System.out.println("Merged and Sorted Linked-List: ");
	        printLinkedList(mergedList);
	    }
	}

